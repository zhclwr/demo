<style>
.ivu-form .ivu-form-item-label{
	padding: 10px 0px 10px 0;
}

</style>
<template>
    <div>
		<Card dis-hover>
            <div class="page-body">
                <Form ref="queryForm" :label-width="70" label-position="left" inline>
                	<Row>
						<Col span="3">
							<Input v-model="proName" placeholder="名称或助记符"/>
						</Col>
						<Col span="4">
							<FormItem label="医保类型：" style="width:100%;margin-left:5px">
								<Select v-model="type" style="width:100%; ">
									<Option v-for="item in medicalTypes" :value="item.value" :key="item.value">{{ item.text }}</Option>
								</Select>
							</FormItem>
						</Col>
						<Col span="4">
							<FormItem label="类 型："  style="width:100%;margin-left:5px">
								<Select v-model="type" >
									<Option v-for="item in typeOptions" :value="item.value" :key="item.value">{{ item.text }}</Option>
								</Select>
							</FormItem>
						</Col>
	                </Row>
                </Form>
				<div class="">
                    <Table :loading="table.loading" :columns="columns" :no-data-text="L('NoDatas')" border :data="list">
                    </Table>
                    <Page  class-name="fengpage" :total="table.totalCount" class="margin-top-10" @on-change="pageChange" :page-size="table.pageSize" :current="table.currentPage"></Page>
                </div>
            </div>
        </Card>
        <modal v-model="modalShow" v-if="modalShow" :data='modalData' />
    </div>
</template>
<script lang="ts">
import AbpBase from '../../../lib/abpbase'
import { Component, Vue,Inject, Prop,Watch } from 'vue-property-decorator';
import {GetMedicalCodeSettingType, MedicareCodeOfSpecialData} from '../../../api/specialDictionary'
import Util from '../../../lib/util'
import u from 'underscore'
import modal from './modal.vue'
import {GetSysListByCode} from "@/api/configureDictionary"

@Component({
    components:{modal}
})
export default class Project extends AbpBase {
	@Watch('proName')
	WatchProName(val: string, oldVal: string) {
		this.table.currentPage = 1
		this.getData()
	}

	@Watch('type')
	WatchType(val: string, oldVal: string) {
		this.table.currentPage = 1
		this.getData()
	}
	proName = ''//查询条件
	list = []//table数据源
	status = 1 //启用状态;
	table = {
		loading:false,
		totalCount : 0,
		pageSize : 10,
		currentPage:1
    }
    statusOptions = [
        {label:'启用',value:1},
        {label:'禁用',value:0},
	]
	type = 1
	types = {
			
	}
	typeOptions = []
    medicalTypes = []
    modalData = {}
    modalShow = false
	async created() {
	    await this.getType()
		this.getData()
	}
	async getType() {
	    this.medicalTypes = await GetSysListByCode({code: "15", strName: ''}) || []
		if (this.medicalTypes.length) {
            let res = await GetMedicalCodeSettingType({medicalTypeId: this.medicalTypes[0].id})
		}

	}
	async getData(){
		this.table.loading = true
		let payload = {
			name:this.proName,
			medicareSpecial:this.type,
			status:this.status,
			pageSize:this.table.pageSize,
			Page:this.table.currentPage
		}
		let response = await MedicareCodeOfSpecialData(payload)
		this.list = response.data.items.map((item:any)=>{
			if(item.medicareSpecialType==1 || item.medicareSpecialType==2){
				item.name = item.name+`(${item.model})`
			}
			item.medicareSpecialName = this.typeOptions.find((v:any)=>{return v.value == item.medicareSpecialType}).text
			return item;
		})

		this.table.totalCount = response.data.totalCount
		this.table.loading = false
	}
	pageChange(page: number) {
		this.table.currentPage = page
		this.getData()
	}
	columns = [
        {
            title: "类型",
            key: 'medicareSpecialName'
        },
        {
            title: "名称",
            key:'name',
        },
        {
            title: "备注",
            key:'remark',
        },
        {
            title: "医保编码",
            render:(h: any, p: any) => {
				return h('Input',{
				    props: {
				        value: 111
					}
				},[
				    h('i',{
                        slot: 'append',
				        class: {
							'iconfont': true
						},
						style:{
                            'font-size': '10px'
						},
                        on: {
                            input: function (event) {
                                p.row.medicareName = event
                            }
                        },
                        domProps: {
                            innerHTML: p.row.$isEdit ? '&#xe602;' : '&#xe611;'
                        }
					})
				])
			}
        },
        {
            title: this.L('Actions'),
            key: 'Actions',
            width: 150,
            render: (h: any, params: any) => {
                return h('div', [
                    h('Button', {
                        props: {
                            type: 'primary',
                            size: 'small'
                        },
                        style: {
                            marginRight: '5px'
                        },
                        on: {
                            click: () => {
                                this.manage(params.row)
                            }
                        }
                    },'医保编码维护'),
                ])
		    }
        }
	]
	manage(row:any){
		this.modalShow = true
		this.modalData = row
	}
}
</script>
<style scoped>
	.ml-15{
		margin-left: 15px
	}

</style>


